## Assuming the .travis.yml file is in the project directory, and there is a separate sub-directory for each service
## Use either `docker-compose` or individual `docker build` commands
## Build
  - docker build -t udagram-api-feed ./udagram-api-feed
## Do similar for other three images
## Tagging
  - docker tag udagram-api-feed sudkul/udagram-api-feed:v1
## Do similar for other three images```
```bash
## Push
## Assuming DOCKER_PASSWORD and DOCKER_USERNAME are set in the Travis repository settings
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push sudkul/udagram-api-feed:v1
## Do similar for other three images

language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker build -t udagram-reverseproxy ./udagram-reverseproxy
  - docker build -t udagram-api-user ./udagram-api-user
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker build -t udagram-frontend ./udagram-frontend

# Tagging
  - docker tag udagram-api-feed  phamdatpiboo/udagram-api-feed:ver2
  - docker tag udagram-api-user  phamdatpiboo/udagram-api-user:ver2
  - docker tag udagram-reverseproxy  phamdatpiboo/udagram-reverseproxy:ver2
  - docker tag udagram-frontend  phamdatpiboo/udagram-frontend:local

after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push phamdatpiboo/udagram-api-feed:ver2
  - docker push phamdatpiboo/udagram-api-user:ver2
  - docker push phamdatpiboo/udagram-reverseproxy:ver2
  - docker push phamdatpiboo/udagram-frontend:local
  